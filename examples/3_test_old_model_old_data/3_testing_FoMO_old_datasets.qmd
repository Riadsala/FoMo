---
title: "3 Results using Existing Data"
format: html
editor: source
---

```{r, message=FALSE, warning = FALSE}
library(tidyverse)
library(cmdstanr)

source("../../functions/import_data.R")
source("../../functions/prep_data.R")
source("../../functions/compute_summary_stats.R")
source("../../functions/plot_model.R")
source("../../functions/plot_data.R")
source("../../functions/post_functions.R")
source("../../functions/sim_foraging_data.R")

options(mc.cores = 1, digits = 2)

# set global ggplot theme
theme_set(ggthemes::theme_tufte())
```

these are fit by script `fit_all_models.R` and run on our cluster/big-chungus.


Let us write a function that does all the computations for the models that we're interested in:

```{r}

compare_FoMo_accuracy <- function(dataset) {
  
  d <- import_data(dataset)

  m10 <- readRDS(paste0("scratch/", dataset, "_train_1_0.model"))
  t10 <- readRDS(paste0("scratch/", dataset, "_test_1_0.model"))
  
  m11 <- readRDS(paste0("scratch/", dataset, "_train_1_1.model"))
  t11 <- readRDS(paste0("scratch/", dataset, "_test_1_1.model"))
  
  pred10 <- summarise_postpred(list(training = m10, testing = t10), d, get_sim = FALSE, draw_sample_frac=0.5)
  pred11 <- summarise_postpred(list(training = m11, testing = t11), d, get_sim = FALSE, draw_sample_frac=0.5)
  
  acc10 <- compute_acc(pred10$acc) %>% mutate(model = "FoMo 1.0")
  acc11 <- compute_acc(pred11$acc) %>% mutate(model = "FoMo 1.1")
  
  return(bind_rows(acc10, acc11) %>%
           mutate(data = dataset))
  
}

```

# Kristjansson 2014

```{r}
m10 <- readRDS("scratch/kristjansson2014plos_train_1_0.model")
```

## Model checking

Did the mcmc sampling work ok? 

```{r}


# diagnostic checks
m10$diagnostic_summary()

# traceplots
bayesplot::mcmc_trace(m10$draws(), pars = c("b_a[1]", "b_a[2]", "b_stick[1]", "b_stick[2]", 
                                               "rho_delta[1]", "rho_delta[2]", "rho_psi[1]", "rho_psi[2]"),
                      facet_args = list(nrow = 2))
```

## Which model fits best 

### Prediction Accuracy

Eventually we're going to turn this into a wrapper function that does all of our model comparison stuff

```{r}
# chance_acc <- mean(1/(seq(53, 1)))

d_acc_k2014 <- compare_FoMo_accuracy("kristjansson2014plos")
d_acc_t2022 <- compare_FoMo_accuracy("tagu2022cog")

d_acc <- bind_rows(d_acc_k2014, d_acc_t2022) 
rm(d_acc_k2014, d_acc_t2022)


d_acc %>% ggplot(aes(model, accuracy, colour = interaction(data, condition),
                     ymin = .lower, ymax = .upper)) + 
  geom_interval(position = position_dodge(0.1), alpha = 0.5) +
  geom_path(aes(x = as.numeric(as_factor(model)))) + 
  facet_grid(.~split)
```

## Posterior Densities

Let's look at the model fit for the best performing model 
At present, we only have 1.0 so we will use that

```{r}
post <- extract_post(m11, d)

plot_model_fixed(post)
```




## Posterior Predictions